
@page "/"
@using HarborFlow.Core.Interfaces
@using HarborFlow.Core.Models
@inject IVesselTrackingService VesselTrackingService
@inject Microsoft.JSInterop.IJSRuntime JSRuntime

<h3>Vessel Map</h3>

<div id="map" style="height: 600px; width: 100%;"></div>

@code {
    private bool _mapInitialized;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_mapInitialized)
        {
            _mapInitialized = true;
            await JSRuntime.InvokeVoidAsync("initMap", new { lat = -6.2088, lng = 106.8456, zoom = 10 });

            var vessels = await VesselTrackingService.GetAllVesselsAsync();
            var vesselData = vessels.Select(vessel =>
            {
                var lastPosition = vessel.Positions.OrderByDescending(p => p.PositionTimestamp).FirstOrDefault();
                return new
                {                   
                    name = vessel.Name,
                    imo = vessel.IMO,
                    lat = lastPosition?.Latitude,
                    lng = lastPosition?.Longitude,
                    speed = lastPosition?.SpeedOverGround
                };
            }).Where(v => v.lat.HasValue && v.lng.HasValue).ToList();

            await JSRuntime.InvokeVoidAsync("addVesselMarkers", vesselData);
        }
    }
}
