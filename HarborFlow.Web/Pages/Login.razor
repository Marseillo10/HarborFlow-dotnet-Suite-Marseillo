@page "/login"
@using HarborFlow.Core.Interfaces
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<div class="auth-container">
    <div class="auth-card">
        <h3>Login</h3>
        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="username">Username</label>
                <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
            </div>

            <button type="submit" class="btn btn-primary btn-block mt-3">Login</button>
        </EditForm>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task HandleLogin()
    {
        var user = await AuthService.AuthenticateAsync(loginModel.Username, loginModel.Password);
        if (user != null)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            // Handle failed login
        }
    }

    public class LoginModel
    {
        public string Username { get; set; } = "";
        public string Password { get; set; } = "";
    }
}
